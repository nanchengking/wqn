<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
		http://www.springframework.org/schema/beans  http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

	<!-- Configures the @Controller programming model -->
	<aop:aspectj-autoproxy proxy-target-class="true" />
	<mvc:annotation-driven />
	<mvc:default-servlet-handler />
	<context:component-scan base-package="com.liushuqing.wqn" />
	<context:annotation-config />

	<!-- 国际化的一些东西 -->
	<bean id="localeResolver"
		class="org.springframework.web.servlet.i18n.CookieLocaleResolver" />

	<!-- 请求映射处理器，但是作用没有在外层表达出来 -->
	<bean id="handlerMapping"
		class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" />

	<!-- xml的边界问题，不用关心 -->
	<bean id="fmXmlEscape" class="freemarker.template.utility.XmlEscape" />

	<!-- 调用freemarker必须加入的东西，一个freemarkerConfig -->
	<bean id="freemarkerConfig"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<!-- 配置模板加载路径 -->
		<property name="templateLoaderPath">
			<value>/WEB-INF/template/ftl</value>
		</property>
		<property name="freemarkerSettings">
			<props>
				<!-- 10 minutes -->
				<prop key="template_update_delay">0</prop>
				<prop key="default_encoding">UTF-8</prop>
				<prop key="locale">zh_cn</prop>
				<prop key="number_format">0.##########</prop>
				<prop key="url_escaping_charset">UTF-8</prop>
			</props>
		</property>
		<property name="freemarkerVariables">
			<map>
				<entry key="xml_escape" value-ref="fmXmlEscape" />
			</map>
		</property>
	</bean>

	<!-- 应该数数据上传需要的东西 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- one of the properties available; the maximum file size in bytes 400m -->
		<property name="maxUploadSize" value="419430400" />
	</bean>

	<!-- 静态文件的过滤 -->
	<mvc:resources mapping="/res/**" location="/res/" />

	<!-- ContentNegotiatingViewResolver 本身并不自己去解析，他只是分配给其他的ViewResolver 去解析。 -->
	<bean
		class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="defaultContentType" value="text/html" />
		<property name="mediaTypes">
			<!-- 负责你静态文件里面的后缀名所对应的mediatype -->
			<map>
				<entry key="html" value="text/html;charset=UTF-8" />
				<entry key="json" value="application/json;charset=UTF-8" />
				<entry key="xml" value="application/xml;charset=UTF-8" />
			</map>
		</property>
		<!-- 哈哈，我就知道是这样，所以这儿开始配置不同后后缀名字的解析器 -->
		<property name="viewResolvers">
			<list>
				<bean
					class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
					<property name="cache" value="false" />
					<property name="prefix" value="" />
					<property name="suffix" value=".ftl" />
					<property name="exposeSpringMacroHelpers" value="true" />
					<property name="exposeRequestAttributes" value="true" />
					<property name="exposeSessionAttributes" value="true" />
					<property name="contentType" value="text/html;charset=UTF-8" />
					<property name="order" value="1"></property>
				</bean>
				<bean
					class="org.springframework.web.servlet.view.InternalResourceViewResolver">
					<property name="prefix" value="/WEB-INF/template/html/" />
					<property name="suffix" value=".html"></property>
					<property name="order" value="2"></property>
				</bean>
			</list>
		</property>
	</bean>

	<bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean>
	<bean id="jsonConverter"
		class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
		<property name="prefixJson" value="false" />
		<property name="supportedMediaTypes" value="application/json" />
	</bean>
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="mappingJacksonHttpMessageConverter" />
			</list>
		</property>
	</bean>
</beans>
